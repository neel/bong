<?php
namespace Structs\Admin;
final class SpiritMethod extends Method{
	/**
	 * @load
	 * @param ReflectionMethod $reflection
	 */
	protected function _createFromReflection($reflection){
		$this->_type = Method::SpiritMethod;
		parent::_createFromReflection($reflection);
		//{ Add Views
		if($this->isPublic()){
			$viewPath = \Path::instance()->evaluate(':'.$this->controller()->project()->name().'.*'.$this->controller()->name().'.view.-'.$this->name());
			if(file_exists($viewPath)){
				$dh = opendir($viewPath);
				$viewsFound = array();
				while(false !== ($file = readdir($dh))) {
			        if($file != "." && $file != ".." && strtolower(pathinfo($file, PATHINFO_EXTENSION)) == 'php'){
			        	$viewFilePath = rtrim($viewPath, '/')."/$file";
			            $viewsFound[$file] = $viewFilePath;
			            $this->addView(SpiritView::create($this, pathinfo($file, PATHINFO_FILENAME)));
			        }
			    }
			    closedir($dh);
			    if(array_key_exists('view.php', $viewsFound)){
			    	$this->setHasDefaultView();
			    }
			}
		}
		//}
	}
	public function generate($buffer=false){
		$access = $this->_public ? 'public' : 'private';
		$argsStr = implode(', ', $this->_arguments);
		$writeStr = <<<METHODSTR
	/**
	 * Method Generated by Bong Admin panel
	 */			
	$access function {$this->_name}($argsStr){
		/*TODO Not Implemented Yet*/
	}
}
METHODSTR;
		if(!$buffer){
				$endLine = $this->_controller->endLine();
				$fp = fopen($this->_controller->filePath(), 'r+');
				fseekline($fp, $endLine);
				$classEndPos = fstrrpos($fp, '}')-2;
				fseek($fp, $classEndPos);
				fwrite($fp, $writeStr, strlen($writeStr));
				fclose($fp);
			}else{
				return $writeStr;
			}
	}
	public function generateView(){
		foreach($this->_views as $view){
$viewStr = <<<VIEWSTR
/**
 * \view {$this->_controller->className()}:{$this->name()}:{$view->name()}
 */	
VIEWSTR;
			$fp = fopen($view->filePath(), 'w');
			fwrite($fp, $viewStr, strlen($viewStr));
			fclose($fp);
		}
	}

}
?>
